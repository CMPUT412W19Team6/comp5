#!/usr/bin/env python
PACKAGE = "comp5"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("linear_vel", double_t, 0, "Linear velocity of the robot", 0.2, 0, 2.0)
gen.add("Kp", double_t, 0, "Proportional constant", 0.1, 0, 0.1)
gen.add("Kd", double_t, 0, "Diffrential constant", 0.00125, 0, 0.1)
gen.add("Ki", double_t, 0, "Integral constant", 0.0, 0, 0.1)

gen.add("white_max_h", double_t, 0, "White upper bound of hue", 250, 0, 360)
gen.add("white_max_s", double_t, 0, "White upper bound of saturation", 60, 0, 360)
gen.add("white_max_v", double_t, 0, "White upper bound of value", 256, 0, 360)

gen.add("white_min_h", double_t, 0, "White lower bound of hue", 0, 0, 360)
gen.add("white_min_s", double_t, 0, "White lower bound of saturation", 0, 0, 360)
gen.add("white_min_v", double_t, 0, "White lower bound of value", 230, 0, 360)

gen.add("red_max_h", double_t, 0, "Red upper bound of hue", 226.8, 0, 360)
gen.add("red_max_s", double_t, 0, "Red upper bound of saturation", 290.0, 0, 360)
gen.add("red_max_v", double_t, 0, "Red upper bound of value", 256, 0, 360)

gen.add("red_min_h", double_t, 0, "Red lower bound of hue", 0, 0, 360)
gen.add("red_min_s", double_t, 0, "Red lower bound of saturation", 64.8, 0, 360)
gen.add("red_min_v", double_t, 0, "Red lower bound of value", 216, 0, 360)

gen.add("green_max_h", double_t, 0, "Green upper bound of hue", 108.0, 0, 360)
gen.add("green_max_s", double_t, 0, "Green upper bound of saturation", 140.4, 0, 360)
gen.add("green_max_v", double_t, 0, "Green upper bound of value", 248.4, 0, 360)

gen.add("green_min_h", double_t, 0, "Green lower bound of hue", 75.6, 0, 360)
gen.add("green_min_s", double_t, 0, "Green lower bound of saturation", 68.4, 0, 360)
gen.add("green_min_v", double_t, 0, "Green lower bound of value", 129.6, 0, 360)

gen.add("red_timeout", double_t, 0, "Time till robot stops since last red was seen", 0.5, 0, 5.0)
gen.add("red_area_threshold", double_t, 0, "Area threshold to distinguish between large and small red tapes", 12000, 0, 20000)

exit(gen.generate(PACKAGE, "comp5", "Comp5"))
